openapi: "3.0"
info:
  version: 1.0.0
  title: kakao-moneythrowing API documentation
  contact:
    name: Junyoung Park
    email: pk920207@gmail.com

paths:
  /throwing:
    post:
      summary: 뿌리기 생성
      operationId: createThrowing
      tags:
      - Throwing
      parameters:
      - $ref: '#/components/parameters/UserIdHeader'
      - $ref: '#/components/parameters/RoomIdHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateThrowingRequest'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'

  /throwing/{token}:
    get:
      summary: 뿌리기 조회
      operationId: getThrowing
      tags:
        - Throwing
      parameters:
      - $ref: '#/components/parameters/UserIdHeader'
      - $ref: '#/components/parameters/RoomIdHeader'
      - $ref: '#/components/parameters/TokenPath'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Throwing'

  /throwing/{token}/receive:
    put:
      summary: 뿌린 금액 받기
      operationId: receiveThrowing
      tags:
      - Throwing
      parameters:
      - $ref: '#/components/parameters/UserIdHeader'
      - $ref: '#/components/parameters/RoomIdHeader'
      - $ref: '#/components/parameters/TokenPath'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Amount'

components:
  parameters:
    UserIdHeader:
      in: header
      name: X-USER-ID
      schema:
        type: string
        format: uuid
      required: true
    RoomIdHeader:
      in: header
      name: X-ROOM-ID
      schema:
        type: string
        format: uuid
      required: true
    TokenPath:
      in: path
      name: token
      schema:
        type: string
      required: true

  schemas:
    CreateThrowingRequest:
      type: object
      properties:
        moneyAmount:
          type: integer
        peopleCount:
          type: integer

    Throwing:
      type: object
      properties:
        time:
          $ref: '#/components/schemas/ThrowingTime'
        amountStatus:
          $ref: '#/components/schemas/ThrowingAmountStatus'
        receivedUser:
          type: array
          items:
            $ref: '#/components/schemas/Receiving'
    ThrowingAmountStatus:
      type: object
      properties:
        total:
          type: integer
        completed:
          type: integer
        remain:
          type: integer
    ThrowingTime:
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
    Receiving:
      type: object
      properties:
        acquirer:
          type: string
          format: uuid
        amount:
          type: integer
    Token:
      type: object
      properties:
        token:
          type: string
    Amount:
      type: object
      properties:
        amount:
          type: integer